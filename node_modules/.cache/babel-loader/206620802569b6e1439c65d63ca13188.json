{"ast":null,"code":"var _jsxFileName = \"/Users/andresgonzalez/Desktop/homework/src/components/SearchForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; //Components\n\nimport Loading from './Loading';\nimport CountryCard from './CountryCard';\nimport \"./searchForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SearchForm = () => {\n  _s();\n\n  const [data, setData] = useState(\"\");\n  const [countryName, setCountryName] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const fetchCountryData = () => {\n    setLoading(true);\n\n    try {\n      setTimeout(async () => {\n        const response = await fetch(`https://restcountries.eu/rest/v2/name/${countryName}`);\n        const result = await response.json();\n        setData(result);\n        console.log(result);\n        setLoading(false);\n      }, 1000);\n    } catch (error) {\n      setError(true);\n    }\n\n    setCountryName(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchCountryDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countryWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"searchTitle\",\n          children: \"Countries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"searchSubtitle\",\n          children: \"Please make sure to enter the country name in English\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"searchLabel\",\n            children: \"Search by country name (In English)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"eg. Colombia\",\n            className: error ? \"error\" : \"searchInput\",\n            onChange: e => {\n              setCountryName(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"searchCountryButton\",\n            onClick: fetchCountryData,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), \"error ? (\", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"test error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), \") : (\", loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), data && data.map(singleCountry => {\n          return /*#__PURE__*/_jsxDEV(CountryCard, {\n            name: singleCountry.name,\n            flag: singleCountry.flag,\n            area: singleCountry.area\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), \")\"]\n  }, void 0, true);\n};\n\n_s(SearchForm, \"oXSg1aUMxq26lSTGJu/ajfpcpkg=\");\n\n_c = SearchForm;\nexport default SearchForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchForm\");","map":{"version":3,"sources":["/Users/andresgonzalez/Desktop/homework/src/components/SearchForm.jsx"],"names":["React","useState","Loading","CountryCard","SearchForm","data","setData","countryName","setCountryName","loading","setLoading","error","setError","fetchCountryData","setTimeout","response","fetch","result","json","console","log","e","target","value","map","singleCountry","name","flag","area"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,kBAAP;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAErB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAMY,gBAAgB,GAAG,MAAM;AAE3BH,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACI,QAAI;AACAI,MAAAA,UAAU,CAEN,YAAU;AACV,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,yCAAwCT,WAAY,EAAtD,CAA5B;AACA,cAAMU,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;AACAZ,QAAAA,OAAO,CAACW,MAAD,CAAP;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAP,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OARS,EAQR,IARQ,CAAV;AASH,KAVD,CAUE,OAAOC,KAAP,EAAc;AACZC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;;AAILJ,IAAAA,cAAc,CAAC,EAAD,CAAd;AACH,GApBD;;AAsBA,sBACI;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAG,UAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,kCACI;AAAO,YAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,WAAW,EAAC,cAA/B;AAA8C,YAAA,SAAS,EAAEG,KAAK,GAAG,OAAH,GAAa,aAA3E;AAA0F,YAAA,QAAQ,EAAGU,CAAD,IAAM;AAACb,cAAAA,cAAc,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AAA+B;AAA1I;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAQ,YAAA,SAAS,EAAC,qBAAlB;AAAwC,YAAA,OAAO,EAAEV,gBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,4BASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATA,WAYQJ,OAAO,iBACH,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAbZ,EAiBQJ,IAAI,IACAA,IAAI,CAACmB,GAAL,CAAUC,aAAD,IAAmB;AACxB,8BACI,QAAC,WAAD;AACJ,YAAA,IAAI,EAAEA,aAAa,CAACC,IADhB;AAEJ,YAAA,IAAI,EAAED,aAAa,CAACE,IAFhB;AAGJ,YAAA,IAAI,EAAEF,aAAa,CAACG;AAHhB;AAAA;AAAA;AAAA;AAAA,kBADJ;AAOH,SARD,CAlBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA;AAAA,kBADJ;AAqCH,CAlED;;GAAMxB,U;;KAAAA,U;AAoEN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react'\n\n//Components\nimport Loading from './Loading'\nimport CountryCard from './CountryCard'\nimport \"./searchForm.css\"\n\nconst SearchForm = () => {\n\n    const [data, setData] = useState(\"\")\n    const [countryName, setCountryName] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(false)\n\n    const fetchCountryData = () => {\n\n        setLoading(true)\n            try {\n                setTimeout( \n            \n                    async()=> {\n                    const response = await fetch(`https://restcountries.eu/rest/v2/name/${countryName}`)\n                    const result = await response.json()\n                    setData(result)\n                    console.log(result)\n                    setLoading(false)\n                },1000)\n            } catch (error) {\n                setError(true)\n            }\n            \n        \n\n        setCountryName(\"\")\n    }\n\n    return (\n        <>\n        <div className=\"searchCountryDiv\">\n            <div className=\"countryWrapper\">\n                <h1 className=\"searchTitle\">Countries</h1>\n                <p className=\"searchSubtitle\">Please make sure to enter the country name in English</p>\n                <div className=\"inputDiv\">\n                    <label className=\"searchLabel\">Search by country name (In English)</label>\n                    <input type=\"text\" placeholder=\"eg. Colombia\" className={error ? \"error\" : \"searchInput\"} onChange={(e)=> {setCountryName(e.target.value)}}/>\n                    <button className=\"searchCountryButton\" onClick={fetchCountryData}>Search</button>\n                </div>\n        error ? (\n            <p>test error</p>\n        ) : (\n                {\n                    loading && (\n                        <Loading />\n                    )\n                }\n                {\n                    data && (\n                        data.map((singleCountry) => {\n                            return (\n                                <CountryCard \n                            name={singleCountry.name}\n                            flag={singleCountry.flag}\n                            area={singleCountry.area}\n                            />\n                            )\n                        })\n                    )\n                }\n            </div>\n        </div>\n        )\n        </>\n    )\n}\n\nexport default SearchForm\n"]},"metadata":{},"sourceType":"module"}