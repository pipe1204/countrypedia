{"ast":null,"code":"var _jsxFileName = \"/Users/andresgonzalez/Desktop/homework/src/components/SearchForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; //Components\n\nimport Loading from './Loading';\nimport CountryCard from './CountryCard';\nimport \"./searchForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchForm = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [countryName, setCountryName] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const fetchCountryData = () => {\n    setLoading(true);\n    setTimeout(async () => {\n      try {\n        const response = await fetch(`https://restcountries.eu/rest/v2/name/${countryName}`);\n        const result = await response.json();\n        setData(result);\n      } catch (error) {\n        console.log(\"error\");\n        setError(true);\n      }\n\n      setLoading(false);\n    }, 1000);\n    setCountryName(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"searchCountryDiv\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"countryWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"searchTitle\",\n        children: \"Countries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"searchSubtitle\",\n        children: \"Please make sure to enter the country name in English\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"searchLabel\",\n          children: \"Search by country name (In English)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"eg. Colombia\",\n          className: \"searchInput\",\n          onChange: e => {\n            setCountryName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"searchCountryButton\",\n          onClick: fetchCountryData,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), \"error ? (\", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), \") : (\", loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }, this), data.map(singleCountry => {\n        return /*#__PURE__*/_jsxDEV(CountryCard, {\n          name: singleCountry.name,\n          flag: singleCountry.flag,\n          area: singleCountry.area\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this);\n      }), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchForm, \"taxb7LRsXaPYo+6CAo9Oc2NzcJ4=\");\n\n_c = SearchForm;\nexport default SearchForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchForm\");","map":{"version":3,"sources":["/Users/andresgonzalez/Desktop/homework/src/components/SearchForm.jsx"],"names":["React","useState","Loading","CountryCard","SearchForm","data","setData","countryName","setCountryName","loading","setLoading","error","setError","fetchCountryData","setTimeout","response","fetch","result","json","console","log","e","target","value","map","singleCountry","name","flag","area"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,kBAAP;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAErB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAMY,gBAAgB,GAAG,MAAM;AAE3BH,IAAAA,UAAU,CAAC,IAAD,CAAV;AACQI,IAAAA,UAAU,CACF,YAAU;AACN,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,yCAAwCT,WAAY,EAAtD,CAA5B;AACA,cAAMU,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;AACAZ,QAAAA,OAAO,CAACW,MAAD,CAAP;AACH,OAJD,CAIE,OAAON,KAAP,EAAc;AACZQ,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAR,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;;AACDF,MAAAA,UAAU,CAAC,KAAD,CAAV;AACC,KAXH,EAWI,IAXJ,CAAV;AAYYF,IAAAA,cAAc,CAAC,EAAD,CAAd;AACvB,GAhBD;;AAkBA,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACI;AAAO,UAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,cAA/B;AAA8C,UAAA,SAAS,EAAC,aAAxD;AAAsE,UAAA,QAAQ,EAAGa,CAAD,IAAM;AAACb,YAAAA,cAAc,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AAA+B;AAAtH;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,SAAS,EAAC,qBAAlB;AAAwC,UAAA,OAAO,EAAEV,gBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,4BAUQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVR,WAaQJ,OAAO,iBACH,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAdZ,EAkBQJ,IAAI,CAACmB,GAAL,CAAUC,aAAD,IAAmB;AACxB,4BACI,QAAC,WAAD;AACA,UAAA,IAAI,EAAEA,aAAa,CAACC,IADpB;AAEA,UAAA,IAAI,EAAED,aAAa,CAACE,IAFpB;AAGA,UAAA,IAAI,EAAEF,aAAa,CAACG;AAHpB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOH,OARD,CAlBR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH,CA3DD;;GAAMxB,U;;KAAAA,U;AA6DN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react'\n\n//Components\nimport Loading from './Loading'\nimport CountryCard from './CountryCard'\nimport \"./searchForm.css\"\n\nconst SearchForm = () => {\n\n    const [data, setData] = useState([])\n    const [countryName, setCountryName] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(false)\n\n    const fetchCountryData = () => {\n\n        setLoading(true)\n                setTimeout( \n                        async()=> {\n                            try {\n                                const response = await fetch(`https://restcountries.eu/rest/v2/name/${countryName}`)\n                                const result = await response.json()\n                                setData(result)\n                            } catch (error) {\n                                console.log(\"error\")\n                                setError(true)\n                            }\n                            setLoading(false)\n                            },1000)\n                            setCountryName(\"\")\n    }\n\n    return (\n        <div className=\"searchCountryDiv\">\n            <div className=\"countryWrapper\">\n                <h1 className=\"searchTitle\">Countries</h1>\n                <p className=\"searchSubtitle\">Please make sure to enter the country name in English</p>\n                <div className=\"inputDiv\">\n                    <label className=\"searchLabel\">Search by country name (In English)</label>\n                    <input type=\"text\" placeholder=\"eg. Colombia\" className=\"searchInput\" onChange={(e)=> {setCountryName(e.target.value)}}/>\n                    <button className=\"searchCountryButton\" onClick={fetchCountryData}>Search</button>\n                </div>\n\n                error ? (\n                    <p>Test</p>\n                ) : (\n                    {\n                    loading && (\n                        <Loading />\n                    )\n                }\n                {\n                    data.map((singleCountry) => {\n                        return (\n                            <CountryCard \n                            name={singleCountry.name}\n                            flag={singleCountry.flag}\n                            area={singleCountry.area}\n                            />\n                            )\n                    })\n                }\n                )           \n            </div>\n        </div>\n    )\n}\n\nexport default SearchForm\n"]},"metadata":{},"sourceType":"module"}