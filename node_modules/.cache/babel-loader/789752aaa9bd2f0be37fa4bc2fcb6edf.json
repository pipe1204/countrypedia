{"ast":null,"code":"var _jsxFileName = \"/Users/andresgonzalez/Desktop/homework/src/components/WeatherCapital.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport \"./weeatherCapital.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherCapital = () => {\n  _s();\n\n  const capital = useParams();\n  const apiKey = \"b8d4be1420fcaa09cdb97626256ea831\";\n  const [weatherData, setWeatherData] = useState();\n  const [loaded, setLoaded] = useState(false);\n  const [wind, setWind] = useState([]);\n  const [weather, setWeather] = useState([]);\n\n  const fetchWeatherData = async () => {\n    try {\n      const response = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${capital.capital}&appid=${apiKey}`);\n      const results = await response.json();\n      setWeatherData(results);\n      setWind(results.wind);\n      setWeather(results.weather);\n      setLoaded(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchWeatherData();\n  }, []);\n  console.log(weather);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainDiv\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weatherWrapper\",\n      children: loaded && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weatherCard\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"weatherTitle\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"City:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 54\n          }, this), \" \", weatherData.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"weatherTitle\",\n          children: [\"Currently: \", weather[0].main]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"weatherTitle\",\n          children: [\"Description: \", weather[0].description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"weatherTitle\",\n          children: [\"Speed: \", wind.speed]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"weatherTitle\",\n          children: [\"Deg: \", wind.deg]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"weatherImage\",\n          src: `http://openweathermap.org/img/wn/${weather[0].icon}.png`,\n          alt: wind.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WeatherCapital, \"u8WgnP6uaDCn+I2gHXdXJxQ2wlE=\", false, function () {\n  return [useParams];\n});\n\n_c = WeatherCapital;\nexport default WeatherCapital;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherCapital\");","map":{"version":3,"sources":["/Users/andresgonzalez/Desktop/homework/src/components/WeatherCapital.jsx"],"names":["React","useState","useEffect","useParams","WeatherCapital","capital","apiKey","weatherData","setWeatherData","loaded","setLoaded","wind","setWind","weather","setWeather","fetchWeatherData","response","fetch","results","json","error","console","log","name","main","description","speed","deg","icon"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAO,uBAAP;;;AAGA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAEzB,QAAMC,OAAO,GAAGF,SAAS,EAAzB;AACA,QAAMG,MAAM,GAAG,kCAAf;AAEA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,EAA9C;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;;AAGA,QAAMc,gBAAgB,GAAG,YAAW;AAEhC,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,oDAAmDZ,OAAO,CAACA,OAAQ,UAASC,MAAO,EAArF,CAA5B;AACA,YAAMY,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AACAX,MAAAA,cAAc,CAACU,OAAD,CAAd;AACAN,MAAAA,OAAO,CAACM,OAAO,CAACP,IAAT,CAAP;AACAG,MAAAA,UAAU,CAACI,OAAO,CAACL,OAAT,CAAV;AACAH,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH,KAPD,CAOE,OAAOU,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AAEJ,GAbD;;AAeAlB,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,gBAAgB;AACnB,GAFQ,EAEP,EAFO,CAAT;AAIAM,EAAAA,OAAO,CAACC,GAAR,CAAYT,OAAZ;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBAEQJ,MAAM,iBACN;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA,kCAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA7B,OAAiDF,WAAW,CAACgB,IAA7D;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA,oCAAyCV,OAAO,CAAC,CAAD,CAAP,CAAWW,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA,sCAA2CX,OAAO,CAAC,CAAD,CAAP,CAAWY,WAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA,gCAAqCd,IAAI,CAACe,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA,8BAAmCf,IAAI,CAACgB,GAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAK,UAAA,SAAS,EAAC,cAAf;AAA8B,UAAA,GAAG,EAAG,oCAAmCd,OAAO,CAAC,CAAD,CAAP,CAAWe,IAAK,MAAvF;AAA8F,UAAA,GAAG,EAAEjB,IAAI,CAACc;AAAxG;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAhDD;;GAAMrB,c;UAEcD,S;;;KAFdC,c;AAkDN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport \"./weeatherCapital.css\"\n    \n\nconst WeatherCapital = () => {\n\n    const capital = useParams()\n    const apiKey = \"b8d4be1420fcaa09cdb97626256ea831\"\n\n    const [weatherData, setWeatherData] = useState()\n    const [loaded, setLoaded] = useState(false)\n    const [wind, setWind] = useState([])\n    const [weather, setWeather] = useState([])\n\n\n    const fetchWeatherData = async() => {\n\n        try {\n            const response = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${capital.capital}&appid=${apiKey}`)\n            const results = await response.json()\n            setWeatherData(results)\n            setWind(results.wind)\n            setWeather(results.weather)\n            setLoaded(true)\n        } catch (error) {\n            console.log(error)\n        }\n        \n    }\n\n    useEffect(() => {\n        fetchWeatherData()\n    },[])\n\n    console.log(weather)\n    return (\n        <div className=\"mainDiv\">\n            <div className=\"weatherWrapper\">\n                {\n                    loaded && \n                    <div className=\"weatherCard\">\n                        <h3 className=\"weatherTitle\"><span>City:</span> {weatherData.name}</h3>\n                        <h3 className=\"weatherTitle\">Currently: {weather[0].main}</h3>\n                        <h3 className=\"weatherTitle\">Description: {weather[0].description}</h3>\n                        <h3 className=\"weatherTitle\">Speed: {wind.speed}</h3>\n                        <h3 className=\"weatherTitle\">Deg: {wind.deg}</h3>\n                        <img className=\"weatherImage\" src={`http://openweathermap.org/img/wn/${weather[0].icon}.png`} alt={wind.description}/>\n                    </div>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default WeatherCapital\n"]},"metadata":{},"sourceType":"module"}